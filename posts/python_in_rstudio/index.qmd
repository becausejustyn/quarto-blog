---
title: "NFL Game Excitement"
execute: 
  freeze: true
  eval: true
format:
  html:
    highlight: true
    code-fold: show
    code-tools: true
    highlight-style: github
---


```{r}
library(tidyverse)
library(gt)
library(gtExtras)
```

I have the data on my local machine, but you can also load it with `nflfastR`.
```{r}
#nflfastr::load_pbp(2021)
pbp <- read_rds("~/Documents/nfl/data/pbp/play_by_play_2021.rds")
```

### Game Excitement Index  

$$
\frac{2400}{\text{Length of Game}} \sum_{i = 2}^{\text{n plays}} \mid \text{WinProb(i) - WinProb(i - 1)} \mid
$$

> the formula sums the absolute value of the win probability change from each play

`https://sports.sites.yale.edu/game-excitement-index-part-ii`

```{r}
avg_length <- pbp %>%
  group_by(game_id) %>%
  count() %>%
  ungroup() %>%
  summarise(mean(n)) %>%
  pull()

calc_gei <- function(data, this_game_id){
  game = filter(data, game_id == this_game_id)
  length = length(game)
  normalise = avg_length / length
  #Get win probability differences for each play
  win_prob_change = select(pbp, home_wp) %>% lag()
  #Normalization
  gei = normalise * win_prob_change %>% sum()
  return(gei)
}
```

```{r}
pbp %>%
  calc_gei('2021_20_BUF_KC')
```

```{r}
#| eval: false
pbp %>%
  filter(game_id == '2021_20_BUF_KC') %>%
  summarise(
    normalise = avg_length / length(game_id),
    win_prob_change = diff(home_wp) %>% abs(),
    gei = normalise * win_prob_change %>% sum(na.rm = TRUE)
  )
```

```{r}
#Calculate average length of 2019 games for use in our function
#avg_length = data.groupby(by = ['game_id'])['epa'].count().mean()

avg_length <- pbp %>%
  group_by(game_id) %>%
  count() %>%
  ungroup() %>%
  summarise(mean(n)) %>%
  pull()

pbp %>%
  filter(game_id == '2021_20_BUF_KC') %>%
  summarise(
    normalise = avg_length / length(game_id),
    win_prob_change = diff(home_wp) %>% abs(),
    gei = normalise * win_prob_change %>% sum(na.rm = TRUE)
  )
```


```{r}
gei_games <- pbp %>%
  group_by(game_id) %>%
  summarise(
    normalise = avg_length / length(game_id),
    win_prob_change = diff(home_wp) %>% abs(),
    gei = normalise * win_prob_change %>% sum(na.rm = TRUE)
  ) %>%
  distinct(game_id, .keep_all = TRUE) %>%
  select(game_id, gei)
```

```{r}
gei_joined <- pbp %>%
  select(game_id, home_team, away_team, week) %>%
  distinct(game_id, .keep_all = TRUE) %>%
  left_join(gei_games)

lead_changes <- pbp %>%
  group_by(game_id) %>%
  mutate(
    team_leading = case_when(
      total_home_score - total_away_score > 0 ~ 'home',
      total_home_score - total_away_score < 0 ~ 'away',
      TRUE ~ 'tie'),
    lead_change = if_else(team_leading == lag(team_leading), 0, 1)
  ) %>%
  select(game_id, lead_change) %>%
  summarise(
    lead_changes = sum(lead_change, na.rm = TRUE)
  )

gei_joined <- gei_joined %>%
  left_join(lead_changes)
```


```{r}
#fig.height=5
gei_joined %>%
  select(-game_id) %>%
  mutate(
    week = case_when(
      week == 19 ~ 'Wild Card',
      week == 20 ~ 'Divisional',
      TRUE ~ as.character(week)
    ),
    gei = round(gei, 2)
    ) %>% 
  slice_max(gei, n = 15) %>%
  arrange(-gei) %>%
  gt() %>%
  tab_spanner(
    label = "TEAMS",
    columns = c(home_team, away_team)
  ) %>%
  data_color(
    columns = c(gei),
    colors = scales::col_numeric(
      palette = c("#ffffcc", "#2c7fb8"), #"white", #3fc1c9
      domain = NULL
    )
  ) %>% 
  cols_label(
    home_team = "HOME TEAM",
    away_team = "AWAY TEAM",
    week = "WEEK",
    gei = "GEI"
  ) %>% 
  tab_source_note(
    source_note = md("Data: nflfastR<br>TABLE: @becausejustyn")
  ) %>% 
  gt_theme_538(table.width = px(550))
```

Philly vs LAC was the only game with 10 lead changes that was not in the top 15 for GEI, likewise, NYG vs WAS was not in the top 15 despite 9 lead changes, however, that is excused 

```{r}
gei_joined %>%
  select(-game_id) %>%
  mutate(
    week_var = case_when(
      week == 19 ~ 'Wild Card',
      week == 20 ~ 'Divisional',
      TRUE ~ as.numeric(week)
    )
  ) %>%
  arrange(-gei) %>%
  gt() %>%
  tab_spanner(
    label = "TEAMS",
    columns = c(home_team, away_team)
  ) %>%
  data_color(
    columns = c(gei),
    colors = scales::col_numeric(
      palette = c("white", "#3fc1c9"),
      domain = NULL
    )
  ) %>% 
  cols_label(
    home_team = "HOME TEAM",
    away_team = "AWAY TEAM",
    week = "WEEK",
    gei = "GEI"
  ) %>% 
  tab_source_note(
    source_note = md("Data: nflfastR<br>TABLE: @becausejustyn")
  ) %>% 
  gt_theme_538(table.width = px(550))
```

```{r}
gei_joined <- pbp %>%
  select(game_id, home_team, away_team, week, home_score, away_score) %>%
  distinct(game_id, .keep_all = TRUE) %>%
  left_join(gei_games)
```

```{r}
# https://www.kaylinpavlik.com/how-to-watch-as-little-football-as-possible/
# get number of lead changes


```


```{r}
pbp %>%
  filter(between(wp, .3, .7)) %>%
  group_by(game_id) %>%
  mutate(fun = length(game_id)) %>%
  select(game_id, fun) %>%
  distinct(game_id, .keep_all = TRUE) %>%
  arrange(-fun)
```

