---
title: "Moneyline to Win Prob"
execute: 
  freeze: true
  eval: true
format:
  html:
    highlight: true
    code-fold: show
    code-tools: true
    highlight-style: github
---

# Gambling Functions

```{r}
#| warning: false
library(dplyr)
library(glue)
```

```{r}
money_line <- function(fav, underdog) {
    
  fav_odds = (fav * -1)
  prob1 = fav_odds / (fav_odds + underdog)
  prob2 = underdog / (fav_odds + underdog)
  fav_prob = prob1 %>% round(3)
  underdog_prob = prob2 %>% round(3)
  
  return(glue::glue("Favourite odds: {fav_prob}\n Underdog odds:{underdog_prob}"))
}
```

```{r}
money_line(-130, 110)
```

The problem with the above function is that it requires the input values to be in a specific order. If you want a more general approach that does not specify the order of the two values, you could do something like this.

```{r}
money_line2 <- function(arg1, arg2) {
  
  fav = sort(c(arg1, arg2))[1]
  underdog = sort(c(arg1, arg2))[2]
    
  fav_val = fav * -1
  
  fav_prob = fav_val / (fav_val + underdog)
  
  return(fav_prob %>% round(3))
}
```

```{r}
money_line2(-425, 351)
money_line2(351, -425)
```

```{r}
logit <- function(p) { 
  out <- log(p/(1 - p))
  return(out)
}
```