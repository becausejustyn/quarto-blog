---
title: "Untitled"
format: html
---

# Colouring Text in ggplot2

```{r}
library(tidyverse)
library(ggtext) 
library(grid)
```

```{r}
mtcars %>%
  ggplot(aes(
    x = wt, 
    y = mpg, 
    colour = factor(cyl)
  )) +
  geom_point() +
  labs(
    x = "<span style = 'color:#93C1DE'>**wt**</span>",
    y = "<span style = 'color:#2ca25f'>**mpg**</span>",
    title = "Lower <span style='color:#93C1DE'>**wt**</span> tends to increase the amount of <span style='color:#2ca25f'>**mpg**</span>",
    colour = ""
  ) +
  theme(
    plot.title = element_markdown(),
    axis.title.x = element_markdown(),
    axis.title.y = element_markdown()
  )
```

Colouring one of interest

```{r}
iris %>%
  group_by(Species) %>%
  summarise(mean_petal_width = mean(Petal.Width), .groups = "drop") %>%
  mutate(
    colour = c("lightgray", "lightgray", "#0072B2"), #009E73
    name = glue("<i style='color:{colour}'>{Species}</i>"),
    name = fct_reorder(name, mean_petal_width)
  ) %>%
  ggplot(aes(
    x = name,
    y = mean_petal_width,
    fill = colour
  )) +
  geom_col() +
  hrbrthemes::theme_ipsum() +
  scale_fill_identity() +
  labs(
    x = NULL,
    y = NULL,
    title = "<span style = 'color: #43a2ca;'>Virginica irises</span> have the largest average sepal width"
  ) +
  theme(
    plot.title = element_markdown(),
    axis.text.x = element_markdown(),
    legend.position = "none"
  )
```

Having them all coloured

```{r}
iris %>%
  group_by(Species) %>%
  summarise(mean_petal_width = mean(Petal.Width), .groups = "drop") %>%
  mutate(
    colour = c("#91529e", "#009E73", "#0072B2"), #009E73
    name = glue("<i style='color:{colour}'>{Species}</i>"),
    name = fct_reorder(name, mean_petal_width)
  ) %>%
  ggplot(aes(
    x = name,
    y = mean_petal_width,
    fill = colour
  )) +
  geom_col() +
  hrbrthemes::theme_ipsum() +
  scale_fill_identity() +
  labs(
    x = NULL,
    y = NULL,
    title = "<span style = 'color: #43a2ca;'>Virginica irises</span> have the largest average sepal width"
  ) +
  theme(
    plot.title = element_markdown(),
    axis.text.x = element_markdown(),
    legend.position = "none"
  )
```

```{r}

```

```{r}

```
